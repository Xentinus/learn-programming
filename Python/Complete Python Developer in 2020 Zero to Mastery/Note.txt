Konzolra írás
print('Hello world')

Bevitel
input('What is your name? ')

Mentés dekl és kiirás
name = input('What is your name? ')
print('Hello' + name)


----- Data Types -----

# Fundemental Core Data Types

##  Numbers
int = egész szám
float = tört szám
print(2**5) = print(2*2*2*2*2)

#Igaz hamis
bool = igaz hamis

# string
str = string, text
  '' és ""
  long_string = '''
  WOW
  O O

  '''

#egyebek
list
tuple
set
dict
None = semmi
complex = csak complex mateknál használják

Mi az adat típusa: type(6) = <class 'int'>

----- math functions -----
round(3.1) = 3 kerekítés
abs(-20) =  20 abszolut értéke (nincs negatív érték)

----- operator precedence -----
() -> ** -> * / -> +-

binári (0b binárist jelent)
print(bin(5)) = 0b101
int('0b101', 2) = 5 (2 binary)

----- variables -----
iq = 190

a,b,c = 1,2,3

#constant
PI = 3.14 (változtatható, csak látható kell hogy legyen hogy nem kéne változnia)

----- expression / statement -----
user_age = iq /5 (statement line of action)
iq / 5    (expression)

----- augmented assignment operator -----
some_value = 5
some_value = some_value + 2  -> some_value += 2

----- string concatenation -----
'hello' + 5 = error 5 must be str

Type Conversion:
str(100)

----- escape sequence -----
weather = "It\'s \"kind of\" sunny"
\t = add tab
\n = new line

----- formatted strings -----
name = 'Johnny'
age = 55

print('hi ' + name + '. You are ' + str(age) + ' years old')

better way: f kell az elejére!!! 

print(f'hi {name}. You are {age} years old')

print('hi {0}. You are {1} years old'.format(name, age))
print('hi {new_name}. You are {1} years old'.format(new_name='sally', age))
